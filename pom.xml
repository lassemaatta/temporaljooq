<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.4.2</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>
    <groupId>fi.lassemaatta</groupId>
    <artifactId>temporaljooq</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <name>temporal-jooq-demo</name>
    <description>Demo project for jOOQ + temporal tables</description>

    <properties>
        <java.version>11</java.version>
        <maven.compiler.source>11</maven.compiler.source>
        <maven.compiler.target>11</maven.compiler.target>
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

        <guava.version>30.1-jre</guava.version>
        <immutables.version>2.8.2</immutables.version>

        <maven-properties.plugin.version>1.0.0</maven-properties.plugin.version>
        <maven.compiler.plugin.version>3.8.1</maven.compiler.plugin.version>
    </properties>

    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <build.profile.id>dev</build.profile.id>
                <build.property.file>profiles/dev/config.properties</build.property.file>
            </properties>
            <build>
                <filters>
                    <filter>${build.property.file}</filter>
                </filters>
            </build>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
    </profiles>

    <dependencies>
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter</artifactId>
        </dependency>

        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <dependency>
            <groupId>org.immutables</groupId>
            <artifactId>value</artifactId>
            <version>${immutables.version}</version>
            <scope>provided</scope>
        </dependency>

        <!-- Needed for JOOQToSpringExceptionTransformer -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
        </dependency>

        <!-- PostgreSQL JDBC 4 -->
        <dependency>
            <groupId>org.postgresql</groupId>
            <artifactId>postgresql</artifactId>
            <!-- from spring-boot-dependencies-<VERSION>.RELEASE.pom -->
            <version>${postgresql.version}</version>
        </dependency>

        <!-- HikariCP connection pooling -->
        <dependency>
            <groupId>com.zaxxer</groupId>
            <artifactId>HikariCP</artifactId>
        </dependency>

        <!-- Database migrations -->
        <dependency>
            <groupId>org.liquibase</groupId>
            <artifactId>liquibase-core</artifactId>
            <version>${liquibase.version}</version>
        </dependency>

        <!--jOOQ-->
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-meta</artifactId>
        </dependency>
        <dependency>
            <groupId>org.jooq</groupId>
            <artifactId>jooq-codegen</artifactId>
        </dependency>

    </dependencies>

    <build>

        <resources>
            <!-- Resolve @some.key@ placeholders-->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <includes>
                    <include>**/*.properties</include>
                </includes>
            </resource>
            <!-- Only copy other resources -->
            <resource>
                <directory>src/main/resources</directory>
                <filtering>false</filtering>
                <excludes>
                    <exclude>**/*.properties</exclude>
                </excludes>
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>${maven.compiler.plugin.version}</version>
                <configuration>
                    <compilerVersion>11</compilerVersion>
                    <source>11</source>
                    <target>11</target>
                </configuration>
            </plugin>

            <!-- Read properties files -->
            <plugin>
                <groupId>org.codehaus.mojo</groupId>
                <artifactId>properties-maven-plugin</artifactId>
                <version>${maven-properties.plugin.version}</version>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>read-project-properties</goal>
                        </goals>
                        <configuration>
                            <files>
                                <file>${build.property.file}</file>
                            </files>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Run liquibase migrations against an empty DB, which is
                            later scanned by the jOOQ generator -->
            <plugin>
                <groupId>org.liquibase</groupId>
                <artifactId>liquibase-maven-plugin</artifactId>
                <version>${liquibase.version}</version>
                <configuration>
                    <promptOnNonLocalDatabase>false</promptOnNonLocalDatabase>
                    <verbose>true</verbose>
                    <logging>INFO</logging>
                    <changeLogFile>src/main/resources/migrations/db.changelog.xml</changeLogFile>
                    <driver>${db.build.driver}</driver>
                    <url>${db.build.url}</url>
                    <username>${db.build.username}</username>
                    <password>${db.build.password}</password>
                    <contexts>${environment.id}</contexts>
                    <schemas>public</schemas>
                </configuration>
                <executions>
                    <execution>
                        <phase>initialize</phase>
                        <goals>
                            <goal>dropAll</goal>
                            <goal>update</goal>
                        </goals>
                    </execution>
                </executions>
            </plugin>

            <!-- jOOQ generator scans the empty DB to detect the tables created by
                 the liquibase migration -->
            <plugin>
                <groupId>org.jooq</groupId>
                <artifactId>jooq-codegen-maven</artifactId>
                <version>${jooq.version}</version>

                <executions>
                    <execution>
                        <phase>generate-sources</phase>
                        <goals>
                            <goal>generate</goal>
                        </goals>
                    </execution>
                </executions>

                <dependencies>
                    <dependency>
                        <groupId>org.postgresql</groupId>
                        <artifactId>postgresql</artifactId>
                        <!-- from spring-boot-dependencies-<VERSION>.RELEASE.pom -->
                        <version>${postgresql.version}</version>
                    </dependency>
                </dependencies>

                <configuration>
                    <jdbc>
                        <driver>${db.build.driver}</driver>
                        <url>${db.build.url}</url>
                        <user>${db.build.username}</user>
                        <password>${db.build.password}</password>
                    </jdbc>
                    <generator>
                        <name>org.jooq.codegen.JavaGenerator</name>
                        <database>
                            <name>${jooq.generator.db.dialect}</name>
                            <includes>.*</includes>
                            <excludes>
                                (_*)ST_.*
                                | DATABASECHANGELOG.*
                                | PGP_.*
                                | SPRING.*
                                | SKEYS
                                | SVALS
                                | EACH
                            </excludes>
                            <inputSchema>${jooq.generator.input.schema}</inputSchema>
                            <includeRoutines>false</includeRoutines>
                            <includePackages>false</includePackages>
                            <includePackageRoutines>false</includePackageRoutines>
                            <includePackageUDTs>false</includePackageUDTs>
                            <includePackageConstants>false</includePackageConstants>
                            <includeUDTs>false</includeUDTs>
                            <includeSequences>false</includeSequences>
                            <includeUniqueKeys>true</includeUniqueKeys>
                            <includeForeignKeys>true</includeForeignKeys>
                            <includeIndexes>false</includeIndexes>
                            <forcedTypes>
                                <forcedType>
                                    <userType>fi.lassemaatta.temporaljooq.config.jooq.converter.TimeRange</userType>
                                    <converter>fi.lassemaatta.temporaljooq.config.jooq.converter.TimeRangeBinding</converter>
                                    <includeExpression>.*\.SYS_PERIOD.*</includeExpression>
                                    <includeTypes>.*</includeTypes>
                                </forcedType>
                            </forcedTypes>
                        </database>
                        <target>
                            <packageName>fi.lassemaatta.jooq</packageName>
                            <directory>${project.build.directory}/generated-sources/jooq</directory>
                        </target>
                    </generator>
                </configuration>
            </plugin>
        </plugins>
    </build>

</project>
